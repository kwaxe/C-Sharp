<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="FinancialCalculations.MenuPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FinancialCalculations"
    xmlns:common="using:FinancialCalculations.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Financial Calculations</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}" Background="#FF5C7997">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <Grid Grid.Row="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel x:Name="stackPanel" HorizontalAlignment="Left" Height="Auto"  Margin="120,60,0,0" VerticalAlignment="Top" Width="Auto" >
                <Button x:Name="btnFutureValue" Content="Calculate Future Value" HorizontalAlignment="Left" Margin="0,
                        0,0,30" VerticalAlignment="Top" 
                FontSize="30" Padding="30" Click="btnFutureValue_Click" Background="#FF1F3759" BorderBrush="#FF1F3759" Height="150" Width="377"/>
                <Button x:Name="btnDepreciation" Content="Calculate Depreciation" HorizontalAlignment="Left" VerticalAlignment="Top"
        		FontSize="30"  Padding="30" Click="btnDepreciation_Click" Background="#FFEE9719" BorderBrush="#FFEE9719" Height="150"/>
            </StackPanel>
            
            <Image x:Name="image" HorizontalAlignment="Left" Height="50" Margin="20,0,0,20" Grid.Row="1" VerticalAlignment="Bottom"  Source="Assets/MurachLogo.png"/>
        </Grid>


        <!--StackPanel that's used in Snapped view -->
        <StackPanel x:Name="spSnappedDisplay" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Height="500"  Width="320" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Collapsed" Background="#FF1F3759">
           
            <Button Content="Calculate Future Value" HorizontalAlignment="Center"  VerticalAlignment="Top" Margin="0,40,0,0"
        		FontSize="18" Padding="10" Click="btnFutureValue_Click" Background="#FF0E78B4" 
        		BorderBrush="#FF0E78B4" Height="75" Width="220"/>
            <Button  Content="Calculate Depreciation" HorizontalAlignment="Center" Margin="0,30,0,0" VerticalAlignment="Top" 
        		FontSize="18"  Padding="10" Click="btnDepreciation_Click" Background="#FFEE9719" BorderBrush="#FFEE9719" Height="75" Width="220"/>
        </StackPanel>

     
     
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                                               
                        <!-- Make the alternative panel visible when snapped -->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="spSnappedDisplay">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="image">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Double>36</x:Double>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
